<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>ID_AA64DFR0_EL1</reg_short_name>
      <reg_long_name>AArch64 Debug Feature Register 0</reg_long_name>
      
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Provides top level information about the debug system in AArch64 state.</para>

      </purpose_text>
      <purpose_text>
        <para>For general information about the interpretation of the ID registers, see <xref browsertext="Principles of the ID scheme for fields in ID registers" filename="D_aarch64_system_register_descriptions.fm" linkend="BABFAFHI"/>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>The external register <register_link state="ext" id="ext-eddfr.xml">EDDFR</register_link> gives information from this register.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>ID_AA64DFR0_EL1 is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_52"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>52</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="MTPMU_51_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MTPMU</field_name>
          <field_msb>51</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
          
  <para>Multi-threaded PMU extension. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para><xref browsertext="FEAT_MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> not implemented. If PMUv3 is implemented, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.MT are read/write or <arm-defined-word>RES0</arm-defined-word>.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para><xref browsertext="FEAT_MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> implemented and <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.MT are read/write. When <xref browsertext="FEAT_MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> is disabled, the Effective values of <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.MT are 0.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para><xref browsertext="FEAT_MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> not implemented. If PMUv3 is implemented, <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.MT are <arm-defined-word>RES0</arm-defined-word>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="FEAT_MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>In an Armv8.6-compliant implementation that includes PMUv3, the value <binarynumber>0b0000</binarynumber> is not permitted.</para>
<para>In an implementation that does not include PMUv3, the value <binarynumber>0b0001</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_47_44"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>44</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TraceFilt_43_40"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TraceFilt</field_name>
          <field_msb>43</field_msb>
          <field_lsb>40</field_lsb>
          <field_description order="before">
          
  <para>Armv8.4 Self-hosted Trace Extension version. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>Armv8.4 Self-hosted Trace Extension not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>Armv8.4 Self-hosted Trace Extension implemented.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="FEAT_TRF" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.Trace"></xref> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>From Armv8.4, if an Embedded Trace Macrocell Architecture PE Trace Unit is implemented, the value <binarynumber>0b0000</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="DoubleLock_39_36"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DoubleLock</field_name>
          <field_msb>39</field_msb>
          <field_lsb>36</field_lsb>
          <field_description order="before">
          
  <para>OS Double Lock implemented. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>OS Double Lock implemented. <register_link state="AArch64" id="AArch64-osdlr_el1.xml">OSDLR_EL1</register_link> is RW.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para>OS Double Lock not implemented. <register_link state="AArch64" id="AArch64-osdlr_el1.xml">OSDLR_EL1</register_link> is RAZ/WI.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="FEAT_DoubleLock" filename="A_armv8_architecture_extensions.fm" linkend="v8.0.DoubleLock"></xref> implements the functionality identified by the value <binarynumber>0b0000</binarynumber>.</para>
<para>In Armv8.0, the only permitted value is <binarynumber>0b0000</binarynumber>.</para>
<para>If <xref browsertext="FEAT_Debugv8p2" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.Debug"></xref> is implemented and <xref browsertext="FEAT_DoPD" filename="A_armv8_architecture_extensions.fm" linkend="v8.3.DoPD)"></xref> is not implemented, the permitted values are <binarynumber>0b0000</binarynumber> and <binarynumber>0b1111</binarynumber>.</para>
<para>If <xref browsertext="FEAT_DoPD" filename="A_armv8_architecture_extensions.fm" linkend="v8.3.DoPD)"></xref> is implemented, the only permitted value is <binarynumber>0b1111</binarynumber>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PMSVer_35_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PMSVer</field_name>
          <field_msb>35</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Statistical Profiling Extension version. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>Statistical Profiling Extension not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>Statistical Profiling Extension implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
  <para>As <binarynumber>0b0001</binarynumber>, and adds:</para>
<list type="unordered">
<listitem><content>Support for the Event packet Alignment flag.</content>
</listitem><listitem><content>If <xref browsertext="FEAT_SVE" filename="A_armv8_architecture_extensions.fm" linkend="SVE"></xref> is implemented, support for the Scalable Vector extensions to Statistical Profiling.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="FEAT_SPE" filename="A_armv8_architecture_extensions.fm" linkend="SPE"></xref> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para><xref browsertext="FEAT_SPEv1p1" filename="A_armv8_architecture_extensions.fm" linkend="v8.3.SPE"></xref> implements the functionality identified by the value <binarynumber>0b0010</binarynumber>.</para>
<para>From Armv8.5, if <xref browsertext="FEAT_SPE" filename="A_armv8_architecture_extensions.fm" linkend="SPE"></xref> is implemented, the value <binarynumber>0b0001</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="CTX_CMPs_31_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CTX_CMPs</field_name>
          <field_msb>31</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>Number of breakpoints that are context-aware, minus 1. These are the highest numbered breakpoints.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_27_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>27</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="WRPs_23_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>WRPs</field_name>
          <field_msb>23</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Number of watchpoints, minus 1. The value of <binarynumber>0b0000</binarynumber> is reserved.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_19_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="BRPs_15_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>BRPs</field_name>
          <field_msb>15</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>Number of breakpoints, minus 1. The value of <binarynumber>0b0000</binarynumber> is reserved.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PMUVer_11_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PMUVer</field_name>
          <field_msb>11</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Performance Monitors Extension version.</para>
<para>This field does not follow the standard ID scheme, but uses the alternative ID scheme described in <xref browsertext="'Alternative ID scheme used for the Performance Monitors Extension version'" filename="D_aarch64_system_register_descriptions.fm" linkend="BABDFEID"></xref></para>
<para>Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>Performance Monitors Extension not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>Performance Monitors Extension, PMUv3 implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.1. As <binarynumber>0b0001</binarynumber>, and also includes support for:</para>
<list type="unordered">
<listitem><content>Extended 16-bit <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.evtCount field.</content>
</listitem><listitem><content>If EL2 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el2.xml">MDCR_EL2</register_link>.HPMD control bit.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.4. As <binarynumber>0b0100</binarynumber>, and also includes support for the <register_link state="AArch64" id="AArch64-pmmir_el1.xml">PMMIR_EL1</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.5. As <binarynumber>0b0101</binarynumber>, and also includes support for:</para>
<list type="unordered">
<listitem><content>64-bit event counters.</content>
</listitem><listitem><content>If EL2 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el2.xml">MDCR_EL2</register_link>.HCCD control bit.</content>
</listitem><listitem><content>If EL3 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.SCCD control bit.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> form of performance monitors supported, PMUv3 not supported. Arm does not recommend this value for new implementations.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para>FEAT_PMUv3 implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para><xref browsertext="FEAT_PMUv3p1" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.PMU"></xref> implements the functionality identified by the value <binarynumber>0b0100</binarynumber>.</para>
<para><xref browsertext="FEAT_PMUv3p4" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.PMU"></xref> implements the functionality identified by the value <binarynumber>0b0101</binarynumber>.</para>
<para>FEAT_PMUv3p5 implements the functionality identified by the value <binarynumber>0b0110</binarynumber>.</para>
<para>From Armv8.1, if FEAT_PMUv3 is implemented, the value <binarynumber>0b0001</binarynumber> is not permitted.</para>
<para>From Armv8.4, if FEAT_PMUv3 is implemented, the value <binarynumber>0b0100</binarynumber> is not permitted.</para>
<para>From Armv8.5, if FEAT_PMUv3 is implemented, the value <binarynumber>0b0101</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="TraceVer_7_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TraceVer</field_name>
          <field_msb>7</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
          
  <para>Trace support. Indicates whether System register interface to a PE trace unit is implemented. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>PE trace unit System registers not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>PE trace unit System registers implemented.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para>See the ETM Architecture Specification for more information.</para>
<para>A value of <binarynumber>0b0000</binarynumber> only indicates that no System register interface to a PE trace unit is implemented. A PE trace unit might nevertheless be implemented without a System register interface.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="DebugVer_3_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DebugVer</field_name>
          <field_msb>3</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Debug architecture version. Indicates presence of Armv8 debug architecture. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
  <para>Armv8 debug architecture.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
  <para>Armv8 debug architecture with Virtualization Host Extensions.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
  <para>Armv8.2 debug architecture.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
  <para>Armv8.4 debug architecture.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="FEAT_Debugv8p2" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.Debug"></xref> adds the functionality identified by the value <binarynumber>0b1000</binarynumber>.</para>
<para><xref browsertext="FEAT_Debugv8p4" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.Debug"></xref> adds the functionality identified by the value <binarynumber>0b1001</binarynumber>.</para>
<para>In Armv8.1, the value <binarynumber>0b0110</binarynumber> is not permitted.</para>
<para>In Armv8.2, the value <binarynumber>0b0111</binarynumber> is not permitted.</para>
<para>From Armv8.4, the value <binarynumber>0b1000</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="0_63_52" msb="63" lsb="52"/>
        <fieldat id="MTPMU_51_48" msb="51" lsb="48"/>
        <fieldat id="0_47_44" msb="47" lsb="44"/>
        <fieldat id="TraceFilt_43_40" msb="43" lsb="40"/>
        <fieldat id="DoubleLock_39_36" msb="39" lsb="36"/>
        <fieldat id="PMSVer_35_32" msb="35" lsb="32"/>
        <fieldat id="CTX_CMPs_31_28" msb="31" lsb="28"/>
        <fieldat id="0_27_24" msb="27" lsb="24"/>
        <fieldat id="WRPs_23_20" msb="23" lsb="20"/>
        <fieldat id="0_19_16" msb="19" lsb="16"/>
        <fieldat id="BRPs_15_12" msb="15" lsb="12"/>
        <fieldat id="PMUVer_11_8" msb="11" lsb="8"/>
        <fieldat id="TraceVer_7_4" msb="7" lsb="4"/>
        <fieldat id="DebugVer_3_0" msb="3" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRS ID_AA64DFR0_EL1">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, ID_AA64DFR0_EL1</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b000"/>
            
            <enc n="CRn" v="0b0000"/>
            
            <enc n="CRm" v="0b0101"/>
            
            <enc n="op2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    if IsFeatureImplemented("FEAT_IDST") then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.TID3 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        return ID_AA64DFR0_EL1;
elsif PSTATE.EL == EL2 then
    return ID_AA64DFR0_EL1;
elsif PSTATE.EL == EL3 then
    return ID_AA64DFR0_EL1;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>