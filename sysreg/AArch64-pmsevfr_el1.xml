<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>PMSEVFR_EL1</reg_short_name>
      <reg_long_name>Sampling Event Filter Register</reg_long_name>
      
        <reg_condition otherwise="UNDEFINED">when FEAT_SPE is implemented</reg_condition>
      

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Controls sample filtering by events. The overall filter is the logical AND of these filters. For example, if E[3] and E[5] are both set to 1, only samples that have both event 3 (Level 1 unified or data cache refill) and event 5 set (TLB walk) are recorded</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Statistical Profiling Extension registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>PMSEVFR_EL1 is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="E[63]_63_63"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[63]</field_name>
          <field_msb>63</field_msb>
          <field_lsb>63</field_lsb>
          <field_description order="before">
          
  <para>E[63] is the event filter for event 63. If event 63 is not implemented, or filtering on event 63 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 63 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 63 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[62]_62_62"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[62]</field_name>
          <field_msb>62</field_msb>
          <field_lsb>62</field_lsb>
          <field_description order="before">
          
  <para>E[62] is the event filter for event 62. If event 62 is not implemented, or filtering on event 62 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 62 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 62 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[61]_61_61"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[61]</field_name>
          <field_msb>61</field_msb>
          <field_lsb>61</field_lsb>
          <field_description order="before">
          
  <para>E[61] is the event filter for event 61. If event 61 is not implemented, or filtering on event 61 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 61 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 61 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[60]_60_60"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[60]</field_name>
          <field_msb>60</field_msb>
          <field_lsb>60</field_lsb>
          <field_description order="before">
          
  <para>E[60] is the event filter for event 60. If event 60 is not implemented, or filtering on event 60 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 60 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 60 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[59]_59_59"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[59]</field_name>
          <field_msb>59</field_msb>
          <field_lsb>59</field_lsb>
          <field_description order="before">
          
  <para>E[59] is the event filter for event 59. If event 59 is not implemented, or filtering on event 59 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 59 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 59 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[58]_58_58"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[58]</field_name>
          <field_msb>58</field_msb>
          <field_lsb>58</field_lsb>
          <field_description order="before">
          
  <para>E[58] is the event filter for event 58. If event 58 is not implemented, or filtering on event 58 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 58 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 58 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[57]_57_57"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[57]</field_name>
          <field_msb>57</field_msb>
          <field_lsb>57</field_lsb>
          <field_description order="before">
          
  <para>E[57] is the event filter for event 57. If event 57 is not implemented, or filtering on event 57 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 57 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 57 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[56]_56_56"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[56]</field_name>
          <field_msb>56</field_msb>
          <field_lsb>56</field_lsb>
          <field_description order="before">
          
  <para>E[56] is the event filter for event 56. If event 56 is not implemented, or filtering on event 56 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 56 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 56 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[55]_55_55"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[55]</field_name>
          <field_msb>55</field_msb>
          <field_lsb>55</field_lsb>
          <field_description order="before">
          
  <para>E[55] is the event filter for event 55. If event 55 is not implemented, or filtering on event 55 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 55 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 55 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[54]_54_54"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[54]</field_name>
          <field_msb>54</field_msb>
          <field_lsb>54</field_lsb>
          <field_description order="before">
          
  <para>E[54] is the event filter for event 54. If event 54 is not implemented, or filtering on event 54 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 54 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 54 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[53]_53_53"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[53]</field_name>
          <field_msb>53</field_msb>
          <field_lsb>53</field_lsb>
          <field_description order="before">
          
  <para>E[53] is the event filter for event 53. If event 53 is not implemented, or filtering on event 53 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 53 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 53 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[52]_52_52"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[52]</field_name>
          <field_msb>52</field_msb>
          <field_lsb>52</field_lsb>
          <field_description order="before">
          
  <para>E[52] is the event filter for event 52. If event 52 is not implemented, or filtering on event 52 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 52 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 52 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[51]_51_51"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[51]</field_name>
          <field_msb>51</field_msb>
          <field_lsb>51</field_lsb>
          <field_description order="before">
          
  <para>E[51] is the event filter for event 51. If event 51 is not implemented, or filtering on event 51 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 51 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 51 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[50]_50_50"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[50]</field_name>
          <field_msb>50</field_msb>
          <field_lsb>50</field_lsb>
          <field_description order="before">
          
  <para>E[50] is the event filter for event 50. If event 50 is not implemented, or filtering on event 50 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 50 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 50 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[49]_49_49"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[49]</field_name>
          <field_msb>49</field_msb>
          <field_lsb>49</field_lsb>
          <field_description order="before">
          
  <para>E[49] is the event filter for event 49. If event 49 is not implemented, or filtering on event 49 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 49 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 49 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[48]_48_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[48]</field_name>
          <field_msb>48</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
          
  <para>E[48] is the event filter for event 48. If event 48 is not implemented, or filtering on event 48 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 48 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 48 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_47_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[31]_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[31]</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>E[31] is the event filter for event 31. If event 31 is not implemented, or filtering on event 31 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 31 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 31 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[30]_30_30"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[30]</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
          
  <para>E[30] is the event filter for event 30. If event 30 is not implemented, or filtering on event 30 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 30 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 30 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[29]_29_29"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[29]</field_name>
          <field_msb>29</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
          
  <para>E[29] is the event filter for event 29. If event 29 is not implemented, or filtering on event 29 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 29 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 29 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[28]_28_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[28]</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>E[28] is the event filter for event 28. If event 28 is not implemented, or filtering on event 28 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 28 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 28 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[27]_27_27"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[27]</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
          
  <para>E[27] is the event filter for event 27. If event 27 is not implemented, or filtering on event 27 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 27 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 27 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[26]_26_26"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[26]</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>E[26] is the event filter for event 26. If event 26 is not implemented, or filtering on event 26 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 26 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 26 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[25]_25_25"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[25]</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
          
  <para>E[25] is the event filter for event 25. If event 25 is not implemented, or filtering on event 25 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 25 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 25 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[24]_24_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[24]</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>E[24] is the event filter for event 24. If event 24 is not implemented, or filtering on event 24 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 24 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 24 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_23_19"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>23</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[18]_18_18_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RAZ/WI"
        >
          <field_name>E[18]</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
          
  <para>Empty predicate.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Empty predicate event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Empty predicate event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPEv1p1 is implemented and FEAT_SVE is implemented</fields_condition>
      </field>
        <field
           id="0_18_18_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[17]_17_17_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RAZ/WI"
        >
          <field_name>E[17]</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
          
  <para>Partial predicate.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Partial predicate event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Partial predicate event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPEv1p1 is implemented and FEAT_SVE is implemented</fields_condition>
      </field>
        <field
           id="0_17_17_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[15]_15_15"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[15]</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
          
  <para>E[15] is the event filter for event 15. If event 15 is not implemented, or filtering on event 15 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 15 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 15 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[14]_14_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[14]</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>E[14] is the event filter for event 14. If event 14 is not implemented, or filtering on event 14 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 14 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 14 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[13]_13_13"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[13]</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
          
  <para>E[13] is the event filter for event 13. If event 13 is not implemented, or filtering on event 13 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 13 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 13 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[12]_12_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[12]</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>E[12] is the event filter for event 12. If event 12 is not implemented, or filtering on event 12 is not supported, the corresponding bit is RAZ/WI.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event 12 is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have event 12 == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>An <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> event might be recorded as a multi-bit field. In this case, if the corresponding bits of PMSEVFR_EL1 define an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> filter for the event.</para>
<para>This field is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="E[11]_11_11_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RAZ/WI"
        >
          <field_name>E[11]</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Alignment.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Alignment event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Alignment event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPEv1p1 is implemented</fields_condition>
      </field>
        <field
           id="0_11_11_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_10_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>10</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[7]_7_7"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[7]</field_name>
          <field_msb>7</field_msb>
          <field_lsb>7</field_lsb>
          <field_description order="before">
          
  <para>Mispredicted.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Mispredicted event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Mispredicted event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_6_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>6</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[5]_5_5"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[5]</field_name>
          <field_msb>5</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
          
  <para>TLB walk.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>TLB walk event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the TLB walk event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_4_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>4</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[3]_3_3"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>E[3]</field_name>
          <field_msb>3</field_msb>
          <field_lsb>3</field_lsb>
          <field_description order="before">
          
  <para>Level 1 data or unified cache refill.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Level 1 data or unified cache refill event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Level 1 data or unified cache refill event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_2_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>2</field_msb>
          <field_lsb>2</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="E[1]_1_1_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="UNKNOWN"
        >
          <field_name>E[1]</field_name>
          <field_msb>1</field_msb>
          <field_lsb>1</field_lsb>
          <field_description order="before">
          
  <para>Architecturally retired.</para>
<para>When the PE supports sampling of speculative instructions:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Architecturally retired event is ignored.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Do not record samples that have the Architecturally retired event == 0.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is ignored by the PE when <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link>.FE == 0.</para>
<para>If the PE does not support the sampling of speculative instructions, or always discards the sample record for speculative instructions, this bit reads as an <arm-defined-word>UNKNOWN</arm-defined-word> value and the PE ignores its value.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When the PE supports sampling of speculative instructions</fields_condition>
      </field>
        <field
           id="UNKNOWN_1_1_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="UNKNOWN"
        >
          <field_name>UNKNOWN</field_name>
          <field_msb>1</field_msb>
          <field_lsb>1</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
          </field_description>
            <field_values>
               
                 <field_value_name>U</field_value_name>
            </field_values>
      </field>
        <field
           id="0_0_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RAZ/WI"
        >
          <field_name>0</field_name>
          <field_msb>0</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RAZ/WI</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="E[63]_63_63" msb="63" lsb="63"/>
        <fieldat id="E[62]_62_62" msb="62" lsb="62"/>
        <fieldat id="E[61]_61_61" msb="61" lsb="61"/>
        <fieldat id="E[60]_60_60" msb="60" lsb="60"/>
        <fieldat id="E[59]_59_59" msb="59" lsb="59"/>
        <fieldat id="E[58]_58_58" msb="58" lsb="58"/>
        <fieldat id="E[57]_57_57" msb="57" lsb="57"/>
        <fieldat id="E[56]_56_56" msb="56" lsb="56"/>
        <fieldat id="E[55]_55_55" msb="55" lsb="55"/>
        <fieldat id="E[54]_54_54" msb="54" lsb="54"/>
        <fieldat id="E[53]_53_53" msb="53" lsb="53"/>
        <fieldat id="E[52]_52_52" msb="52" lsb="52"/>
        <fieldat id="E[51]_51_51" msb="51" lsb="51"/>
        <fieldat id="E[50]_50_50" msb="50" lsb="50"/>
        <fieldat id="E[49]_49_49" msb="49" lsb="49"/>
        <fieldat id="E[48]_48_48" msb="48" lsb="48"/>
        <fieldat id="0_47_32" msb="47" lsb="32"/>
        <fieldat id="E[31]_31_31" msb="31" lsb="31"/>
        <fieldat id="E[30]_30_30" msb="30" lsb="30"/>
        <fieldat id="E[29]_29_29" msb="29" lsb="29"/>
        <fieldat id="E[28]_28_28" msb="28" lsb="28"/>
        <fieldat id="E[27]_27_27" msb="27" lsb="27"/>
        <fieldat id="E[26]_26_26" msb="26" lsb="26"/>
        <fieldat id="E[25]_25_25" msb="25" lsb="25"/>
        <fieldat id="E[24]_24_24" msb="24" lsb="24"/>
        <fieldat id="0_23_19" msb="23" lsb="19"/>
        <fieldat id="E[18]_18_18_1" msb="18" lsb="18"/>
        <fieldat id="E[17]_17_17_1" msb="17" lsb="17"/>
        <fieldat id="0_16_16" msb="16" lsb="16"/>
        <fieldat id="E[15]_15_15" msb="15" lsb="15"/>
        <fieldat id="E[14]_14_14" msb="14" lsb="14"/>
        <fieldat id="E[13]_13_13" msb="13" lsb="13"/>
        <fieldat id="E[12]_12_12" msb="12" lsb="12"/>
        <fieldat id="E[11]_11_11_1" msb="11" lsb="11"/>
        <fieldat id="0_10_8" msb="10" lsb="8"/>
        <fieldat id="E[7]_7_7" msb="7" lsb="7"/>
        <fieldat id="0_6_6" msb="6" lsb="6"/>
        <fieldat id="E[5]_5_5" msb="5" lsb="5"/>
        <fieldat id="0_4_4" msb="4" lsb="4"/>
        <fieldat id="E[3]_3_3" msb="3" lsb="3"/>
        <fieldat id="0_2_2" msb="2" lsb="2"/>
        <fieldat id="E[1]_1_1_1" msb="1" lsb="1"/>
        <fieldat id="0_0_0" msb="0" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRS PMSEVFR_EL1">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, PMSEVFR_EL1</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b000"/>
            
            <enc n="CRn" v="0b1001"/>
            
            <enc n="CRm" v="0b1001"/>
            
            <enc n="op2" v="0b101"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        UNDEFINED;
    elsif Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGRTR_EL2.PMSEVFR_EL1 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPMS == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV1,NV&gt; == '1x1' then
        return NVMem[0x830];
    else
        return PMSEVFR_EL1;
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        UNDEFINED;
    elsif Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        return PMSEVFR_EL1;
elsif PSTATE.EL == EL3 then
    return PMSEVFR_EL1;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MSRregister PMSEVFR_EL1">
        <encoding>
          
          <access_instruction>MSR PMSEVFR_EL1, &lt;Xt&gt;</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b000"/>
            
            <enc n="CRn" v="0b1001"/>
            
            <enc n="CRm" v="0b1001"/>
            
            <enc n="op2" v="0b101"/>
        </encoding>
          <access_permission>
            <ps name="MSRregister" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        UNDEFINED;
    elsif Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGWTR_EL2.PMSEVFR_EL1 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPMS == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV1,NV&gt; == '1x1' then
        NVMem[0x830] = X[t];
    else
        PMSEVFR_EL1 = X[t];
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        UNDEFINED;
    elsif Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '0' &amp;&amp; MDCR_EL3.NSPB != '01' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.NS == '1' &amp;&amp; MDCR_EL3.NSPB != '11' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        PMSEVFR_EL1 = X[t];
elsif PSTATE.EL == EL3 then
    PMSEVFR_EL1 = X[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>