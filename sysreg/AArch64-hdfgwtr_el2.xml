<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>HDFGWTR_EL2</reg_short_name>
      <reg_long_name>Hypervisor Debug Fine-Grained Write Trap Register</reg_long_name>
      
        <reg_condition otherwise="UNDEFINED">when FEAT_FGT is implemented</reg_condition>
      

          <reg_reset_value>
            <reg_reset_limited_to_el>EL2</reg_reset_limited_to_el>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Provides controls for traps of <instruction>MSR</instruction> and <instruction>MCR</instruction> writes of debug, trace, PMU, and Statistical Profiling System registers.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>A group mapping that does not have a known primary</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>HDFGWTR_EL2 is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_instance>HDFGWTR_EL2</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_58"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>58</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMUSERENR_EL0_57_57_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMUSERENR_EL0</field_name>
          <field_msb>57</field_msb>
          <field_lsb>57</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_57_57_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>57</field_msb>
          <field_lsb>57</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_56_50"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>56</field_msb>
          <field_lsb>50</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRFCR_EL1_49_49_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRFCR_EL1</field_name>
          <field_msb>49</field_msb>
          <field_lsb>49</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trfcr_el1.xml">TRFCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trfcr_el1.xml">TRFCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trfcr_el1.xml">TRFCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_TRF is implemented</fields_condition>
      </field>
        <field
           id="0_49_49_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>49</field_msb>
          <field_lsb>49</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCVICTLR_48_48_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCVICTLR</field_name>
          <field_msb>48</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcvictlr.xml">TRCVICTLR</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcvictlr.xml">TRCVICTLR</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcvictlr.xml">TRCVICTLR</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_48_48_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>48</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_47_47"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>47</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCSSCSRn_46_46_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCSSCSRn</field_name>
          <field_msb>46</field_msb>
          <field_lsb>46</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If Single-shot Comparator n is not implementented, a write of <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>
<para>This bit is <arm-defined-word>RES0</arm-defined-word> if <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link> are not implemented.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_46_46_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>46</field_msb>
          <field_lsb>46</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCSEQSTR_45_45_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCSEQSTR</field_name>
          <field_msb>45</field_msb>
          <field_lsb>45</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcseqstr.xml">TRCSEQSTR</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcseqstr.xml">TRCSEQSTR</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcseqstr.xml">TRCSEQSTR</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if <register_link state="AArch64" id="AArch64-trcseqstr.xml">TRCSEQSTR</register_link> is not implemented.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_45_45_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>45</field_msb>
          <field_lsb>45</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCPRGCTLR_44_44_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCPRGCTLR</field_name>
          <field_msb>44</field_msb>
          <field_lsb>44</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcprgctlr.xml">TRCPRGCTLR</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcprgctlr.xml">TRCPRGCTLR</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcprgctlr.xml">TRCPRGCTLR</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_44_44_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>44</field_msb>
          <field_lsb>44</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_43_43"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>43</field_msb>
          <field_lsb>43</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCOSLAR_42_42_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCOSLAR</field_name>
          <field_msb>42</field_msb>
          <field_lsb>42</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of TRCOSLAR at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of TRCOSLAR are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of TRCOSLAR at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented,</fields_condition>
      </field>
        <field
           id="0_42_42_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>42</field_msb>
          <field_lsb>42</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCIMSPECn_41_41_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCIMSPECn</field_name>
          <field_msb>41</field_msb>
          <field_lsb>41</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>TRCIMSPEC&lt;1-7&gt; are optional. If <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link> is not implemented, a write of <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_41_41_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>41</field_msb>
          <field_lsb>41</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_40_38"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>40</field_msb>
          <field_lsb>38</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCCNTVRn_37_37_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCCNTVRn</field_name>
          <field_msb>37</field_msb>
          <field_lsb>37</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If Counter n is not implemented, a write of <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>
<para>This bit is <arm-defined-word>RES0</arm-defined-word> if <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link> are not implemented.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_37_37_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>37</field_msb>
          <field_lsb>37</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCCLAIM_36_36_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCCLAIM</field_name>
          <field_msb>36</field_msb>
          <field_lsb>36</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of multiple System registers. Enables a trap on <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the following AArch64 System registers to EL2:</para>
<list type="unordered">
<listitem><content><register_link state="AArch64" id="AArch64-trcclaimclr.xml">TRCCLAIMCLR</register_link>.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-trcclaimset.xml">TRCCLAIMSET</register_link>.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of the System registers listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the System registers listed above are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_36_36_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>36</field_msb>
          <field_lsb>36</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRCAUXCTLR_35_35_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRCAUXCTLR</field_name>
          <field_msb>35</field_msb>
          <field_lsb>35</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcauxctlr.xml">TRCAUXCTLR</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcauxctlr.xml">TRCAUXCTLR</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-trcauxctlr.xml">TRCAUXCTLR</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_35_35_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>35</field_msb>
          <field_lsb>35</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_34_34"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>34</field_msb>
          <field_lsb>34</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TRC_33_33_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TRC</field_name>
          <field_msb>33</field_msb>
          <field_lsb>33</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of multiple System registers. Enables a trap on <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the following AArch64 System registers to EL2:</para>
<list type="unordered">
<listitem><content>TRCACATR&lt;n&gt;.</content>
</listitem><listitem><content>TRCACVR&lt;n&gt;.</content>
</listitem><listitem><content>TRCBBCTLR.</content>
</listitem><listitem><content>TRCCCCTLR.</content>
</listitem><listitem><content>TRCCIDCCTLR&lt;n&gt;.</content>
</listitem><listitem><content>TRCCIDCVR&lt;n&gt;.</content>
</listitem><listitem><content>TRCCNTCTLR&lt;n&gt;.</content>
</listitem><listitem><content>TRCCNTRLDVR&lt;n&gt;.</content>
</listitem><listitem><content>TRCCONFIGR.</content>
</listitem><listitem><content>TRCEVENTCTL0R.</content>
</listitem><listitem><content>TRCEVENTCTL1R.</content>
</listitem><listitem><content>TRCEXTINSELR, if FEAT_ETMv4 is implemented.</content>
</listitem><listitem><content>TRCRSCTLR&lt;n&gt;.</content>
</listitem><listitem><content>TRCSEQEVR&lt;n&gt;.</content>
</listitem><listitem><content>TRCSEQRSTEVR.</content>
</listitem><listitem><content>TRCSSCCR&lt;n&gt;.</content>
</listitem><listitem><content>TRCSSPCICR&lt;n&gt;.</content>
</listitem><listitem><content>TRCSTALLCTLR.</content>
</listitem><listitem><content>TRCSYNCPR.</content>
</listitem><listitem><content>TRCTRACEIDR.</content>
</listitem><listitem><content>TRCTSCTLR.</content>
</listitem><listitem><content>TRCVIIECTLR.</content>
</listitem><listitem><content>TRCVIPCSSCTLR.</content>
</listitem><listitem><content>TRCVISSCTLR.</content>
</listitem><listitem><content>TRCVMIDCCTLR&lt;n&gt;.</content>
</listitem><listitem><content>TRCVMIDCVR&lt;n&gt;.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of the System registers listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the System registers listed above are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>A write of an unimplemented register is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_ETMv4 is implemented and System register access to the PE Trace Unit registers is implemented</fields_condition>
      </field>
        <field
           id="0_33_33_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>33</field_msb>
          <field_lsb>33</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSLATFR_EL1_32_32_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSLATFR_EL1</field_name>
          <field_msb>32</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmslatfr_el1.xml">PMSLATFR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmslatfr_el1.xml">PMSLATFR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmslatfr_el1.xml">PMSLATFR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_32_32_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>32</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSIRR_EL1_31_31_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSIRR_EL1</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsirr_el1.xml">PMSIRR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsirr_el1.xml">PMSIRR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsirr_el1.xml">PMSIRR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_31_31_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_30_30"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSICR_EL1_29_29_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSICR_EL1</field_name>
          <field_msb>29</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsicr_el1.xml">PMSICR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsicr_el1.xml">PMSICR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsicr_el1.xml">PMSICR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_29_29_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>29</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSFCR_EL1_28_28_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSFCR_EL1</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsfcr_el1.xml">PMSFCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_28_28_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSEVFR_EL1_27_27_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSEVFR_EL1</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsevfr_el1.xml">PMSEVFR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsevfr_el1.xml">PMSEVFR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmsevfr_el1.xml">PMSEVFR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_27_27_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSCR_EL1_26_26_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSCR_EL1</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmscr_el1.xml">PMSCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmscr_el1.xml">PMSCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmscr_el1.xml">PMSCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_26_26_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMBSR_EL1_25_25_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMBSR_EL1</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbsr_el1.xml">PMBSR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbsr_el1.xml">PMBSR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbsr_el1.xml">PMBSR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_25_25_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMBPTR_EL1_24_24_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMBPTR_EL1</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbptr_el1.xml">PMBPTR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbptr_el1.xml">PMBPTR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmbptr_el1.xml">PMBPTR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_24_24_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMBLIMITR_EL1_23_23_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMBLIMITR_EL1</field_name>
          <field_msb>23</field_msb>
          <field_lsb>23</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmblimitr_el1.xml">PMBLIMITR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmblimitr_el1.xml">PMBLIMITR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmblimitr_el1.xml">PMBLIMITR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_SPE is implemented</fields_condition>
      </field>
        <field
           id="0_23_23_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>23</field_msb>
          <field_lsb>23</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_22_22"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>22</field_msb>
          <field_lsb>22</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMCR_EL0_21_21_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMCR_EL0</field_name>
          <field_msb>21</field_msb>
          <field_lsb>21</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> at EL0 using AArch32 when EL1 is using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> at EL0 using AArch32 are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link> at EL1 and EL0 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> at EL0 using AArch32 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_21_21_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>21</field_msb>
          <field_lsb>21</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSWINC_EL0_20_20_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSWINC_EL0</field_name>
          <field_msb>20</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmswinc_el0.xml">PMSWINC_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmswinc.xml">PMSWINC</register_link> at EL0 using AArch32 when EL1 is using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmswinc_el0.xml">PMSWINC_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmswinc.xml">PMSWINC</register_link> at EL0 using AArch32 are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmswinc_el0.xml">PMSWINC_EL0</register_link> at EL1 and EL0 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmswinc.xml">PMSWINC</register_link> at EL0 using AArch32 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_20_20_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>20</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMSELR_EL0_19_19_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMSELR_EL0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link> at EL0 using AArch32 when EL1 is using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link> at EL0 using AArch32 are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link> at EL1 and EL0 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link> at EL0 using AArch32 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_19_19_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMOVS_18_18_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMOVS</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes and <instruction>MCR</instruction> writes of multiple System registers.</para>
<para>Enables a trap to EL2 the following operations:</para>
<list type="unordered">
<listitem><content>
<para>At EL1 and EL0 using AArch64: <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmovsclr_el0.xml">PMOVSCLR_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmovsset_el0.xml">PMOVSSET_EL0</register_link>.</para>
</content>
</listitem><listitem><content>
<para>At EL0 using Arch32 when EL1 is using AArch64: <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmovsr.xml">PMOVSR</register_link> and <register_link state="AArch32" id="AArch32-pmovsset.xml">PMOVSSET</register_link>.</para>
</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The operations listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes at EL1 and EL0 using AArch64 of <register_link state="AArch64" id="AArch64-pmovsclr_el0.xml">PMOVSCLR_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmovsset_el0.xml">PMOVSSET_EL0</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes at EL0 using AArch32 of <register_link state="AArch32" id="AArch32-pmovsr.xml">PMOVSR</register_link> and <register_link state="AArch32" id="AArch32-pmovsset.xml">PMOVSSET</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>, unless the write generates a higher priority exception.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_18_18_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMINTEN_17_17_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMINTEN</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of multiple System registers. Enables a trap on <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the following AArch64 System registers to EL2:</para>
<list type="unordered">
<listitem><content><register_link state="AArch64" id="AArch64-pmintenclr_el1.xml">PMINTENCLR_EL1</register_link>.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmintenset_el1.xml">PMINTENSET_EL1</register_link>.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of the System registers listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the System registers listed above are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_17_17_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMCNTEN_16_16_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMCNTEN</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes and <instruction>MCR</instruction> writes of multiple System registers.</para>
<para>Enables a trap to EL2 the following operations:</para>
<list type="unordered">
<listitem><content>
<para>At EL1 and EL0 using AArch64: <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmcntenclr_el0.xml">PMCNTENCLR_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmcntenset_el0.xml">PMCNTENSET_EL0</register_link>.</para>
</content>
</listitem><listitem><content>
<para>At EL0 using Arch32 when EL1 is using AArch64: <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmcntenclr.xml">PMCNTENCLR</register_link> and <register_link state="AArch32" id="AArch32-pmcntenset.xml">PMCNTENSET</register_link>.</para>
</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The operations listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes at EL1 and EL0 using AArch64 of <register_link state="AArch64" id="AArch64-pmcntenclr_el0.xml">PMCNTENCLR_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmcntenset_el0.xml">PMCNTENSET_EL0</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes at EL0 using AArch32 of <register_link state="AArch32" id="AArch32-pmcntenclr.xml">PMCNTENCLR</register_link> and <register_link state="AArch32" id="AArch32-pmcntenset.xml">PMCNTENSET</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>, unless the write generates a higher priority exception.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_16_16_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMCCNTR_EL0_15_15_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMCCNTR_EL0</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> and <instruction>MCRR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> at EL0 using AArch32 when EL1 is using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> and <instruction>MCRR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> at EL0 using AArch32 are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> at EL1 and EL0 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> and <instruction>MCRR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> at EL0 using AArch32 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber> (for <instruction>MCR</instruction>) or <hexnumber>0x04</hexnumber> (for <instruction>MCRR</instruction>).</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_15_15_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMCCFILTR_EL0_14_14_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMCCFILTR_EL0</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccfiltr_el0.xml">PMCCFILTR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccfiltr.xml">PMCCFILTR</register_link> at EL0 using AArch32 when EL1 is using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccfiltr_el0.xml">PMCCFILTR_EL0</register_link> at EL1 and EL0 using AArch64 and <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccfiltr.xml">PMCCFILTR</register_link> at EL0 using AArch32 are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmccfiltr_el0.xml">PMCCFILTR_EL0</register_link> at EL1 and EL0 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmccfiltr.xml">PMCCFILTR</register_link> at EL0 using AArch32 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para><register_link state="AArch64" id="AArch64-pmccfiltr_el0.xml">PMCCFILTR_EL0</register_link> can also be accessed in AArch64 state using <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link> when <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL == 31, and <register_link state="AArch32" id="AArch32-pmccfiltr.xml">PMCCFILTR</register_link> can also be accessed in AArch32 state using <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link> when <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL == 31.</para>
<para>Setting this bit to 1 has no effect on accesses to <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link> and <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link>, regardless of the value of <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL or <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_14_14_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMEVTYPERn_EL0_13_13_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMEVTYPERn_EL0</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes and <instruction>MCR</instruction> writes of multiple System registers.</para>
<para>Enables a trap to EL2 the following operations:</para>
<list type="unordered">
<listitem><content>
<para>At EL1 and EL0 using AArch64: <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link>.</para>
</content>
</listitem><listitem><content>
<para>At EL0 using Arch32 when EL1 is using AArch64: <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link> and <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link>.</para>
</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The operations listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes at EL1 and EL0 using AArch64 of <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes at EL0 using AArch32 of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link> and <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>, unless the write generates a higher priority exception.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <xref browsertext="FEAT_FGT" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.FGT"></xref> is implemented, then, regardless of the value of this bit, for each value n:</para>
<list type="unordered">
<listitem><content>
<para>If event counter n is not implemented, the following accesses are <arm-defined-word>UNDEFINED</arm-defined-word>:</para>
<list type="unordered">
<listitem><content>
<para>In AArch64 state, a write of <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>, or, if n is not 31, a write of <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link> when <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL == n.</para>
</content>
</listitem><listitem><content>
<para>In AArch32 state, a write of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>, or, if n is not 31, a write of <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link> when <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL == n.</para>
</content>
</listitem></list>
</content>
</listitem><listitem><content>
<para>If event counter n is implemented and EL2 is implemented and enabled in the current Security state, the following generate a Trap exception to EL2 from EL0 or EL1:</para>
<list type="unordered">
<listitem><content>
<para>In AArch64 state, a write of <register_link state="AArch64" id="AArch64-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>, or a write of <register_link state="AArch64" id="AArch64-pmxevtyper_el0.xml">PMXEVTYPER_EL0</register_link> when <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL == n, reported with EC syndrome value <hexnumber>0x18</hexnumber>.</para>
</content>
</listitem><listitem><content>
<para>In AArch32 state, a write of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>, or a write of <register_link state="AArch32" id="AArch32-pmxevtyper.xml">PMXEVTYPER</register_link> when <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL == n, reported with EC syndrome value <hexnumber>0x03</hexnumber>.</para>
</content>
</listitem></list>
</content>
</listitem></list>
<para>See also HDFGWTR_EL2.PMCCFILTR_EL0.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_13_13_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="PMEVCNTRn_EL0_12_12_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>PMEVCNTRn_EL0</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes and <instruction>MCR</instruction> writes of multiple System registers.</para>
<para>Enables a trap to EL2 the following operations:</para>
<list type="unordered">
<listitem><content>
<para>At EL1 and EL0 using AArch64: <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-pmevcntrn_el0.xml">PMEVCNTR&lt;n&gt;_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmxevcntr_el0.xml">PMXEVCNTR_EL0</register_link>.</para>
</content>
</listitem><listitem><content>
<para>At EL0 using Arch32 when EL1 is using AArch64: <instruction>MCR</instruction> writes of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link> and <register_link state="AArch32" id="AArch32-pmxevcntr.xml">PMXEVCNTR</register_link>.</para>
</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The operations listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H,TGE} != {1,1}, EL1 is using AArch64, and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, then, unless the write generates a higher priority exception:</para>
<list type="unordered">
<listitem><content><instruction>MSR</instruction> writes at EL1 and EL0 using AArch64 of <register_link state="AArch64" id="AArch64-pmevcntrn_el0.xml">PMEVCNTR&lt;n&gt;_EL0</register_link> and <register_link state="AArch64" id="AArch64-pmxevcntr_el0.xml">PMXEVCNTR_EL0</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content><instruction>MCR</instruction> writes at EL0 using AArch32 of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link> and <register_link state="AArch32" id="AArch32-pmxevcntr.xml">PMXEVCNTR</register_link> are trapped to EL2 and reported with EC syndrome value <hexnumber>0x03</hexnumber>, unless the write generates a higher priority exception.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <xref browsertext="FEAT_FGT" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.FGT"></xref> is implemented, then, regardless of the value of this bit, for each value n:</para>
<list type="unordered">
<listitem><content>
<para>If event counter n is not implemented, the following accesses are <arm-defined-word>UNDEFINED</arm-defined-word>:</para>
<list type="unordered">
<listitem><content>
<para>In AArch64 state, a write of <register_link state="AArch64" id="AArch64-pmevcntrn_el0.xml">PMEVCNTR&lt;n&gt;_EL0</register_link>, or a write of <register_link state="AArch64" id="AArch64-pmxevcntr_el0.xml">PMXEVCNTR_EL0</register_link> when <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL == n.</para>
</content>
</listitem><listitem><content>
<para>In AArch32 state, a write of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link> , or a write of <register_link state="AArch32" id="AArch32-pmxevcntr.xml">PMXEVCNTR</register_link> when <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL == n.</para>
</content>
</listitem></list>
</content>
</listitem><listitem><content>
<para>If event counter n is implemented, and EL2 is implemented and enabled in the current Security state, the following generate a Trap exception to EL2 from EL0 or EL1:</para>
<list type="unordered">
<listitem><content>
<para>In AArch64 state, a write of <register_link state="AArch64" id="AArch64-pmevcntrn_el0.xml">PMEVCNTR&lt;n&gt;_EL0</register_link>, or a write of <register_link state="AArch64" id="AArch64-pmxevcntr_el0.xml">PMXEVCNTR_EL0</register_link> when <register_link state="AArch64" id="AArch64-pmselr_el0.xml">PMSELR_EL0</register_link>.SEL == n, reported with EC syndrome value <hexnumber>0x18</hexnumber>.</para>
</content>
</listitem><listitem><content>
<para>In AArch32 state, a write of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>, or a write of <register_link state="AArch32" id="AArch32-pmxevcntr.xml">PMXEVCNTR</register_link> when <register_link state="AArch32" id="AArch32-pmselr.xml">PMSELR</register_link>.SEL == n, reported with EC syndrome value <hexnumber>0x03</hexnumber>.</para>
</content>
</listitem></list>
</content>
</listitem></list>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_12_12_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="OSDLR_EL1_11_11_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>OSDLR_EL1</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-osdlr_el1.xml">OSDLR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-osdlr_el1.xml">OSDLR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-osdlr_el1.xml">OSDLR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_DoubleLock is implemented</fields_condition>
      </field>
        <field
           id="0_11_11_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="OSECCR_EL1_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OSECCR_EL1</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oseccr_el1.xml">OSECCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oseccr_el1.xml">OSECCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oseccr_el1.xml">OSECCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="OSLAR_EL1_8_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OSLAR_EL1</field_name>
          <field_msb>8</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oslar_el1.xml">OSLAR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oslar_el1.xml">OSLAR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-oslar_el1.xml">OSLAR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="DBGPRCR_EL1_7_7"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGPRCR_EL1</field_name>
          <field_msb>7</field_msb>
          <field_lsb>7</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgprcr_el1.xml">DBGPRCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgprcr_el1.xml">DBGPRCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgprcr_el1.xml">DBGPRCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_6_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>6</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="DBGCLAIM_5_5"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGCLAIM</field_name>
          <field_msb>5</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of multiple System registers. Enables a trap on <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the following AArch64 System registers to EL2:</para>
<list type="unordered">
<listitem><content><register_link state="AArch64" id="AArch64-dbgclaimclr_el1.xml">DBGCLAIMCLR_EL1</register_link>.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-dbgclaimset_el1.xml">DBGCLAIMSET_EL1</register_link>.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of the System registers listed above are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes at EL1 using AArch64 of any of the System registers listed above are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="MDSCR_EL1_4_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MDSCR_EL1</field_name>
          <field_msb>4</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="DBGWVRn_EL1_3_3"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGWVRn_EL1</field_name>
          <field_msb>3</field_msb>
          <field_lsb>3</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwvrn_el1.xml">DBGWVR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwvrn_el1.xml">DBGWVR&lt;n&gt;_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwvrn_el1.xml">DBGWVR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If watchpoint n is not implemented, a write of <register_link state="AArch64" id="AArch64-dbgwvrn_el1.xml">DBGWVR&lt;n&gt;_EL1</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="DBGWCRn_EL1_2_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGWCRn_EL1</field_name>
          <field_msb>2</field_msb>
          <field_lsb>2</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwcrn_el1.xml">DBGWCR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwcrn_el1.xml">DBGWCR&lt;n&gt;_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgwcrn_el1.xml">DBGWCR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If watchpoint n is not implemented, a write of <register_link state="AArch64" id="AArch64-dbgwcrn_el1.xml">DBGWCR&lt;n&gt;_EL1</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="DBGBVRn_EL1_1_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGBVRn_EL1</field_name>
          <field_msb>1</field_msb>
          <field_lsb>1</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If breakpoint n is not implemented, a write of <register_link state="AArch64" id="AArch64-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="DBGBCRn_EL1_0_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DBGBCRn_EL1</field_name>
          <field_msb>0</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Trap <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link> are not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state and either EL3 is not implemented or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn == 1, <instruction>MSR</instruction> writes of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link> at EL1 using AArch64 are trapped to EL2 and reported with EC syndrome value <hexnumber>0x18</hexnumber>, unless the write generates a higher priority exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If breakpoint n is not implemented, a write of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link> is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="0_63_58" msb="63" lsb="58"/>
        <fieldat id="PMUSERENR_EL0_57_57_1" msb="57" lsb="57"/>
        <fieldat id="0_56_50" msb="56" lsb="50"/>
        <fieldat id="TRFCR_EL1_49_49_1" msb="49" lsb="49"/>
        <fieldat id="TRCVICTLR_48_48_1" msb="48" lsb="48"/>
        <fieldat id="0_47_47" msb="47" lsb="47"/>
        <fieldat id="TRCSSCSRn_46_46_1" msb="46" lsb="46"/>
        <fieldat id="TRCSEQSTR_45_45_1" msb="45" lsb="45"/>
        <fieldat id="TRCPRGCTLR_44_44_1" msb="44" lsb="44"/>
        <fieldat id="0_43_43" msb="43" lsb="43"/>
        <fieldat id="TRCOSLAR_42_42_1" msb="42" lsb="42"/>
        <fieldat id="TRCIMSPECn_41_41_1" msb="41" lsb="41"/>
        <fieldat id="0_40_38" msb="40" lsb="38"/>
        <fieldat id="TRCCNTVRn_37_37_1" msb="37" lsb="37"/>
        <fieldat id="TRCCLAIM_36_36_1" msb="36" lsb="36"/>
        <fieldat id="TRCAUXCTLR_35_35_1" msb="35" lsb="35"/>
        <fieldat id="0_34_34" msb="34" lsb="34"/>
        <fieldat id="TRC_33_33_1" msb="33" lsb="33"/>
        <fieldat id="PMSLATFR_EL1_32_32_1" msb="32" lsb="32"/>
        <fieldat id="PMSIRR_EL1_31_31_1" msb="31" lsb="31"/>
        <fieldat id="0_30_30" msb="30" lsb="30"/>
        <fieldat id="PMSICR_EL1_29_29_1" msb="29" lsb="29"/>
        <fieldat id="PMSFCR_EL1_28_28_1" msb="28" lsb="28"/>
        <fieldat id="PMSEVFR_EL1_27_27_1" msb="27" lsb="27"/>
        <fieldat id="PMSCR_EL1_26_26_1" msb="26" lsb="26"/>
        <fieldat id="PMBSR_EL1_25_25_1" msb="25" lsb="25"/>
        <fieldat id="PMBPTR_EL1_24_24_1" msb="24" lsb="24"/>
        <fieldat id="PMBLIMITR_EL1_23_23_1" msb="23" lsb="23"/>
        <fieldat id="0_22_22" msb="22" lsb="22"/>
        <fieldat id="PMCR_EL0_21_21_1" msb="21" lsb="21"/>
        <fieldat id="PMSWINC_EL0_20_20_1" msb="20" lsb="20"/>
        <fieldat id="PMSELR_EL0_19_19_1" msb="19" lsb="19"/>
        <fieldat id="PMOVS_18_18_1" msb="18" lsb="18"/>
        <fieldat id="PMINTEN_17_17_1" msb="17" lsb="17"/>
        <fieldat id="PMCNTEN_16_16_1" msb="16" lsb="16"/>
        <fieldat id="PMCCNTR_EL0_15_15_1" msb="15" lsb="15"/>
        <fieldat id="PMCCFILTR_EL0_14_14_1" msb="14" lsb="14"/>
        <fieldat id="PMEVTYPERn_EL0_13_13_1" msb="13" lsb="13"/>
        <fieldat id="PMEVCNTRn_EL0_12_12_1" msb="12" lsb="12"/>
        <fieldat id="OSDLR_EL1_11_11_1" msb="11" lsb="11"/>
        <fieldat id="OSECCR_EL1_10_10" msb="10" lsb="10"/>
        <fieldat id="0_9_9" msb="9" lsb="9"/>
        <fieldat id="OSLAR_EL1_8_8" msb="8" lsb="8"/>
        <fieldat id="DBGPRCR_EL1_7_7" msb="7" lsb="7"/>
        <fieldat id="0_6_6" msb="6" lsb="6"/>
        <fieldat id="DBGCLAIM_5_5" msb="5" lsb="5"/>
        <fieldat id="MDSCR_EL1_4_4" msb="4" lsb="4"/>
        <fieldat id="DBGWVRn_EL1_3_3" msb="3" lsb="3"/>
        <fieldat id="DBGWCRn_EL1_2_2" msb="2" lsb="2"/>
        <fieldat id="DBGBVRn_EL1_1_1" msb="1" lsb="1"/>
        <fieldat id="DBGBCRn_EL1_0_0" msb="0" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRS HDFGWTR_EL2">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, HDFGWTR_EL2</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b100"/>
            
            <enc n="CRn" v="0b0011"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="op2" v="0b101"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        return NVMem[0x1D8];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.FGTEn == '0' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.FGTEn == '0' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        return HDFGWTR_EL2;
elsif PSTATE.EL == EL3 then
    return HDFGWTR_EL2;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MSRregister HDFGWTR_EL2">
        <encoding>
          
          <access_instruction>MSR HDFGWTR_EL2, &lt;Xt&gt;</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b100"/>
            
            <enc n="CRn" v="0b0011"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="op2" v="0b101"/>
        </encoding>
          <access_permission>
            <ps name="MSRregister" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        NVMem[0x1D8] = X[t];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.FGTEn == '0' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.FGTEn == '0' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        HDFGWTR_EL2 = X[t];
elsif PSTATE.EL == EL3 then
    HDFGWTR_EL2 = X[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>