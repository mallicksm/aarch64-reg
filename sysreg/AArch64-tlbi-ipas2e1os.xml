<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="False" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>TLBI IPAS2E1OS</reg_short_name>
      <reg_long_name>TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Outer Shareable</reg_long_name>
      
        <reg_condition otherwise="UNDEFINED">when FEAT_TLBIOS is implemented</reg_condition>
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>If EL2 is implemented and enabled in the current Security state, invalidates cached copies of translation table entries from TLBs that meet all the following requirements:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>
<para>The entry is a stage 2 only translation table entry, from any level of the translation table walk.</para>
</content>
</listitem><listitem><content>
<para>One of the following applies:</para>
<list type="unordered">
<listitem><content>
<para><register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.NS==1 and the entry would be required to translate the specified IPA using the Non-secure EL1&amp;0 translation regime.</para>
</content>
</listitem><listitem><content>
<para><register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.NS==0 and the entry would be required to translate the specified IPA using the Secure EL1&amp;0 translation regime.</para>
</content>
</listitem></list>
</content>
</listitem><listitem><content>
<para>The entry would be used with the current VMID.</para>
</content>
</listitem></list>

      </purpose_text>
      <purpose_text>
        <para>The invalidation is not required to apply to caching structures that combine stage 1 and stage 2 translation table entries.</para>

      </purpose_text>
      <purpose_text>
        <para>The invalidation applies to all PEs in the same Outer Shareable shareability domain as the PE that executes this System instruction.</para>

      </purpose_text>
      <purpose_text>
        <para>For more information about the architectural requirements for this System instruction, see <xref browsertext="'Invalidation of TLB entries from stage 2 translations'" filename="D_the_aarch64_virtual_memory_system_architecture.fm" linkend="CHDFBBEA"/>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>TLB maintenance instructions</reg_group>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>TLBI IPAS2E1OS is a 64-bit System instruction.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="NS_63_63_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>NS</field_name>
          <field_msb>63</field_msb>
          <field_lsb>63</field_lsb>
          <field_description order="before">
          
  <para>Not Secure. Specifies the IPA space.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>IPA is in the Secure IPA space.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>IPA is in the Non-secure IPA space.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When the instruction is executed in Non-secure state, this field is <arm-defined-word>RES0</arm-defined-word>, and the instruction applies only to the Non-secure IPA space.</para>
<para>When <xref browsertext="FEAT_SEL2" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.SecEL2"></xref> is not implemented or is disabled in the current Security state, this field is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When FEAT_SEL2 is implemented</fields_condition>
      </field>
        <field
           id="0_63_63_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>63</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_62_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>62</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TTL_47_44_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TTL</field_name>
          <field_msb>47</field_msb>
          <field_lsb>44</field_lsb>
           <field_range>47:44</field_range>
          <field_description order="before">
          
  <para>Translation Table Level. Indicates the level of the page table walk that holds the leaf entry for the address being invalidated.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00xx</field_value>
        <field_value_description>
  <para>No information supplied as to the translation table level. Hardware must assume that the entry can be from any level. In this case, TTL&lt;1:0&gt; is <arm-defined-word>RES0</arm-defined-word>.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01xx</field_value>
        <field_value_description>
  <para>The entry comes from a 4KB translation granule. The level of walk for the leaf level <binarynumber>0bxx</binarynumber> is encoded as:</para>
<para><binarynumber>0b00</binarynumber> : Reserved. Treat as if TTL&lt;3:2&gt; is <binarynumber>0b00</binarynumber>.</para>
<para><binarynumber>0b01</binarynumber> : Level 1.</para>
<para><binarynumber>0b10</binarynumber> : Level 2.</para>
<para><binarynumber>0b11</binarynumber> : Level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10xx</field_value>
        <field_value_description>
  <para>The entry comes from a 16KB translation granule. The level of walk for the leaf level <binarynumber>0bxx</binarynumber> is encoded as:</para>
<para><binarynumber>0b00</binarynumber> : Reserved. Treat as if TTL&lt;3:2&gt; is <binarynumber>0b00</binarynumber>.</para>
<para><binarynumber>0b01</binarynumber> : Reserved. Treat as if TTL&lt;3:2&gt; is <binarynumber>0b00</binarynumber>.</para>
<para><binarynumber>0b10</binarynumber> : Level 2.</para>
<para><binarynumber>0b11</binarynumber> : Level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11xx</field_value>
        <field_value_description>
  <para>The entry comes from a 64KB translation granule. The level of walk for the leaf level <binarynumber>0bxx</binarynumber> is encoded as:</para>
<para><binarynumber>0b00</binarynumber> : Reserved. Treat as if TTL&lt;3:2&gt; is <binarynumber>0b00</binarynumber>.</para>
<para><binarynumber>0b01</binarynumber> : Level 1.</para>
<para><binarynumber>0b10</binarynumber> : Level 2.</para>
<para><binarynumber>0b11</binarynumber> : Level 3.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If an incorrect value of the TTL field is specified for the entry being invalidated by the instruction, then no entries are required by the architecture to be invalidated from the TLB.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When FEAT_TTL is implemented</fields_condition>
      </field>
        <field
           id="0_47_44_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>44</field_lsb>
           <field_range>47:44</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_43_40"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>43</field_msb>
          <field_lsb>40</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="IPA[51:48]_39_36"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>IPA[51:48]</field_name>
          <field_msb>39</field_msb>
          <field_lsb>36</field_lsb>
          <field_description order="before">
          
  <para>Extension to IPA[47:12]. See IPA[47:12] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="IPA[47:12]_35_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>IPA[47:12]</field_name>
          <field_msb>35</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Bits[47:12] of the intermediate physical address to match. For implementations with fewer than 48 bits, the upper bits of this field are <arm-defined-word>RES0</arm-defined-word>.</para>
<para>When <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref> is implemented, and 52-bit addresses and a 64KB translation granule are in use, IPA[51:48] form the upper part of the address value. Otherwise, IPA[51:48] are <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="NS_63_63_1" msb="63" lsb="63"/>
        <fieldat id="0_62_48" msb="62" lsb="48"/>
        <fieldat id="TTL_47_44_1" msb="47" lsb="44"/>
        <fieldat id="0_43_40" msb="43" lsb="40"/>
        <fieldat id="IPA[51:48]_39_36" msb="39" lsb="36"/>
        <fieldat id="IPA[47:12]_35_0" msb="35" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="TLBI_SYS IPAS2E1OS">
        <encoding>
          
          <access_instruction>TLBI IPAS2E1OS{, &lt;Xt&gt;}</access_instruction>
            
            <enc n="op0" v="0b01"/>
            
            <enc n="op1" v="0b100"/>
            
            <enc n="CRn" v="0b1000"/>
            
            <enc n="CRm" v="0b0100"/>
            
            <enc n="op2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="TLBI_SYS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    TLBI_IPAS2E1OS(X[t]);
elsif PSTATE.EL == EL3 then
    if !EL2Enabled() then
        //no operation
    else
        TLBI_IPAS2E1OS(X[t]);
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>