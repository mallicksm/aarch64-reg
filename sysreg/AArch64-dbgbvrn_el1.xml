<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>DBGBVR&lt;n&gt;_EL1</reg_short_name>
      <reg_long_name>Debug Breakpoint Value Registers</reg_long_name>
      
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>15</reg_array_end>
         </reg_array>
      

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch32-dbgbvrn.xml">DBGBVR&lt;n&gt;</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
          <reg_mapping>
              
            <mapped_name filename="AArch32-dbgbxvrn.xml">DBGBXVR&lt;n&gt;</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>63</mapped_from_startbit>
              <mapped_from_endbit>32</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
          <reg_mapping>
              
            <mapped_name filename="ext-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>External</mapped_execution_state>
              <mapped_from_startbit>63</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>63</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If breakpoint n is not implemented then accesses to this register are <arm-defined-word>UNDEFINED</arm-defined-word>.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>How this register is interpreted depends on the value of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT.</para>

      </attributes_text>
      <attributes_text>
        <list type="unordered">
<listitem><content>When <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b000x</binarynumber>, this register holds a virtual address.</content>
</listitem><listitem><content>When <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b001x</binarynumber>, <binarynumber>0b011x</binarynumber>, or <binarynumber>0b110x</binarynumber>, this register holds a Context ID.</content>
</listitem><listitem><content>When <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b100x</binarynumber>, this register holds a VMID.</content>
</listitem><listitem><content>When <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b101x</binarynumber>, this register holds a VMID and a Context ID.</content>
</listitem><listitem><content>When <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b111x</binarynumber>, this register holds two Context ID values.</content>
</listitem></list>

      </attributes_text>
      <attributes_text>
        <para>For other values of <register_link state="AArch64" id="AArch64-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT, this register is <arm-defined-word>RES0</arm-defined-word>.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b000x</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b000x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="RESS[14:4]_63_53"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RESS[14:4]</field_name>
          <field_msb>63</field_msb>
          <field_lsb>53</field_lsb>
          <field_description order="before">
          
  <para>Reserved, Sign extended. Software must treat this field as <arm-defined-word>RES0</arm-defined-word> if the most significant bit of VA is 0 or <arm-defined-word>RES0</arm-defined-word>, and as <arm-defined-word>RES1</arm-defined-word> if the most significant bit of VA is 1.</para>
<para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether:</para>
<list type="unordered">
<listitem><content>Reads return the value of the most significant bit of the VA for every bit in this field.</content>
</listitem><listitem><content>Reads return the last value written.</content>
</listitem></list>
<para>The PE ignores this field.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="VA[52:49]_52_49_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VA[52:49]</field_name>
          <field_msb>52</field_msb>
          <field_lsb>49</field_lsb>
           <field_range>52:49</field_range>
          <field_description order="before">
          
  <para>Extension to VA[48:2]. See VA[48:2] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_LVA is implemented</fields_condition>
      </field>
        <field
           id="RESS[3:0]_52_49_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>RESS[3:0]</field_name>
          <field_msb>52</field_msb>
          <field_lsb>49</field_lsb>
           <field_range>52:49</field_range>
          <field_description order="before">
          
  <para>Extension to RESS[14:4]. See RESS[14:4] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="VA[48:2]_48_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VA[48:2]</field_name>
          <field_msb>48</field_msb>
          <field_lsb>2</field_lsb>
          <field_description order="before">
          
  <para>Bits[48:2] of the address value for comparison.</para>
<para>When <xref browsertext="FEAT_LVA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVA"></xref> is implemented, VA[52:49] forms the upper part of the address value. Otherwise, VA[52:49] are RESS.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_1_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>1</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b001x</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b001x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison.</para>
<para>The value is compared against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link> when <xref browsertext="FEAT_VHE" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VHE"></xref> is implemented, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 1, and either:</para>
<list type="unordered">
<listitem><content>The PE is executing at EL2.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, the PE is executing at EL0, and EL2 is enabled in the current Security state.</content>
</listitem></list>
<para>Otherwise, the value is compared against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b011x</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b011x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b100x and EL2 is implemented</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b100x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[15:8]_47_40_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VMID[15:8]</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
          
  <para>Extension to VMID[7:0]. See DBGBVR&lt;n&gt;_EL1.VMID[7:0] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_VMID16 is implemented, VTCR_EL2.VS == 1 and EL2 is using AArch64</fields_condition>
      </field>
        <field
           id="0_47_40_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[7:0]_39_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VMID[7:0]</field_name>
          <field_msb>39</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>VMID value for comparison.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="FEAT_VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"></xref> is not implemented.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b101x and EL2 is implemented</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b101x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[15:8]_47_40_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VMID[15:8]</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
          
  <para>Extension to VMID[7:0]. See DBGBVR&lt;n&gt;_EL1.VMID[7:0] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_VMID16 is implemented, VTCR_EL2.VS == 1 and EL2 is using AArch64</fields_condition>
      </field>
        <field
           id="0_47_40_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[7:0]_39_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VMID[7:0]</field_name>
          <field_msb>39</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>VMID value for comparison.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="FEAT_VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"></xref> is not implemented.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b110x, EL2 is implemented and (FEAT_VHE is implemented or FEAT_Debugv8p2 is implemented)</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b110x and EL2 implemented, and CONTEXTIDR_EL2 is implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="ContextID2_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID2</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b111x, EL2 is implemented and (FEAT_VHE is implemented or FEAT_Debugv8p2 is implemented)</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b111x, EL2 implemented, and CONTEXTIDR_EL2 is implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="ContextID2_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID2</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b000x</fields_condition>
      
        <fieldat id="RESS[14:4]_63_53" msb="63" lsb="53"/>
        <fieldat id="VA[52:49]_52_49_1" msb="52" lsb="49"/>
        <fieldat id="VA[48:2]_48_2" msb="48" lsb="2"/>
        <fieldat id="0_1_0" msb="1" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b001x</fields_condition>
      
        <fieldat id="0_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b011x</fields_condition>
      
        <fieldat id="0_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b100x and EL2 is implemented</fields_condition>
      
        <fieldat id="0_63_48" msb="63" lsb="48"/>
        <fieldat id="VMID[15:8]_47_40_1" msb="47" lsb="40"/>
        <fieldat id="VMID[7:0]_39_32" msb="39" lsb="32"/>
        <fieldat id="0_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b101x and EL2 is implemented</fields_condition>
      
        <fieldat id="0_63_48" msb="63" lsb="48"/>
        <fieldat id="VMID[15:8]_47_40_1" msb="47" lsb="40"/>
        <fieldat id="VMID[7:0]_39_32" msb="39" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b110x, EL2 is implemented and (FEAT_VHE is implemented or FEAT_Debugv8p2 is implemented)</fields_condition>
      
        <fieldat id="ContextID2_63_32" msb="63" lsb="32"/>
        <fieldat id="0_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b111x, EL2 is implemented and (FEAT_VHE is implemented or FEAT_Debugv8p2 is implemented)</fields_condition>
      
        <fieldat id="ContextID2_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="15"/>
        </reg_variables>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRS DBGBVR&lt;n&gt;_EL1">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, DBGBVR&lt;n&gt;_EL1</access_instruction>
            
            <enc n="op0" v="0b10"/>
            
            <enc n="op1" v="0b000"/>
            
            <enc n="CRn" v="0b0000"/>
            
            <enc n="CRm" v="n[3:0]"/>
            
            <enc n="op2" v="0b100"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; MDCR_EL3.TDA == '1' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGRTR_EL2.DBGBVRn_EL1 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.&lt;TDE,TDA&gt; != '00' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        return DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)];
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; MDCR_EL3.TDA == '1' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        return DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)];
elsif PSTATE.EL == EL3 then
    if OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        return DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MSRregister DBGBVR&lt;n&gt;_EL1">
        <encoding>
          
          <access_instruction>MSR DBGBVR&lt;n&gt;_EL1, &lt;Xt&gt;</access_instruction>
            
            <enc n="op0" v="0b10"/>
            
            <enc n="op1" v="0b000"/>
            
            <enc n="CRn" v="0b0000"/>
            
            <enc n="CRm" v="n[3:0]"/>
            
            <enc n="op2" v="0b100"/>
        </encoding>
          <access_permission>
            <ps name="MSRregister" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; MDCR_EL3.TDA == '1' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGWTR_EL2.DBGBVRn_EL1 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.&lt;TDE,TDA&gt; != '00' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)] = X[t];
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; MDCR_EL3.TDA == '1' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    elsif OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)] = X[t];
elsif PSTATE.EL == EL3 then
    if OSLSR_EL1.OSLK == '0' &amp;&amp; HaltingAllowed() &amp;&amp; EDSCR.TDA == '1' then
        Halt(DebugHalt_SoftwareAccess);
    else
        DBGBVR_EL1[UInt(CRm&lt;3:0&gt;)] = X[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>