<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>VTTBR_EL2</reg_short_name>
      <reg_long_name>Virtualization Translation Table Base Register</reg_long_name>
      
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch32-vttbr.xml">VTTBR</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>63</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>63</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the EL1&amp;0 translation regime, and other information for this translation regime.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>Virtual memory control registers</reg_group>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If EL2 is not implemented, this register is <arm-defined-word>RES0</arm-defined-word> from EL3.</para>

      </configuration_text>
      <configuration_text>
        <para>This register has no effect if EL2 is not enabled in the current Security state.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>VTTBR_EL2 is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="VMID[15:8]_63_56_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VMID[15:8]</field_name>
          <field_msb>63</field_msb>
          <field_lsb>56</field_lsb>
           <field_range>63:56</field_range>
          <field_description order="before">
          
  <para>Extension to VMID[7:0]. See VTTBR_EL2.VMID[7:0] for more details.</para>
<para>If EL2 is using AArch32, or if the implementation has an 8-bit VMID, this field is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
      </field>
        <field
           id="0_63_56_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>56</field_lsb>
           <field_range>63:56</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[7:0]_55_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VMID[7:0]</field_name>
          <field_msb>55</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
          
  <para>The VMID for the translation table.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content>The <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="FEAT_VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"></xref> is not implemented.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="BADDR_47_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>BADDR</field_name>
          <field_msb>47</field_msb>
          <field_lsb>1</field_lsb>
          <field_description order="before">
          
  <para>Translation table base address, A[47:x] or A[51:x], bits[47:1].</para>
<note><list type="unordered"><listitem><content>Translation table base addresses of 52 bits, A[51:x], are supported only in an implementation that includes <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref> and is using the 64KB translation granule.</content></listitem><listitem><content>A translation table must be aligned to the size of the table, except that when using a translation table base address larger than 48 bits the minimum alignment of a table containing fewer than eight entries is 64 bytes.</content></listitem></list></note><para>In an implementation that includes <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref>, if the value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is <binarynumber>0b110</binarynumber>, then:</para>
<list type="unordered">
<listitem><content>Register bits[47:z] hold bits[47:z] of the stage 1 translation table base address, where z is determined as follows:<list type="unordered">
<listitem><content>If x &gt;= 6 then z=x.</content>
</listitem><listitem><content>Otherwise, z=6.</content>
</listitem></list>
</content>
</listitem><listitem><content>Register bits[5:2] hold bits[51:48] of the stage 1 translation table base address.</content>
</listitem><listitem><content>When z&gt;x register bits[(z-1):x] are <arm-defined-word>RES0</arm-defined-word>, and bits[(z-1):x] of the translation table base address are zero.</content>
</listitem><listitem><content>When x&gt;6  register bits[(x-1):6] are <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>Register bit[1] is <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>Bits[5:2] of the stage 1 translation table base address are zero.</content>
</listitem><listitem><content>In an implementation that includes <xref browsertext="FEAT_TTCNP" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.TTCNP"></xref>, bit[0] of the stage 1 translation table base address is zero.</content>
</listitem></list>
<note><list type="unordered"><listitem><content>In an implementation that includes <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref> a <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS value of <binarynumber>0b110</binarynumber>, that selects a PA size of 52 bits, is permitted only when using the 64KB translation granule.</content></listitem><listitem><content>When the value of <register_link state="AArch64" id="AArch64-id_aa64mmfr0_el1.xml">ID_AA64MMFR0_EL1</register_link>.PARange indicates that the implementation does not support a 52 bit PA size, if a translation table lookup uses this register with the 64KB translation granule when the <xref browsertext="Effective value" filename="glossary.fm" linkend="CBAICCHA"></xref> of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is <binarynumber>0b110</binarynumber> and the value of register bits[5:2] is nonzero, an Address size fault is generated.</content></listitem></list></note><para>If the Effective value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is not <binarynumber>0b110</binarynumber> then:</para>
<list type="unordered">
<listitem><content>Register bits[47:x] hold bits[47:x] of the stage 1 translation table base address.</content>
</listitem><listitem><content>Register bits[(x-1):1] are <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>If the implementation supports 52-bit PAs and IPAs then bits[51:48] of the translation table base addresses used in this stage of translation are <binarynumber>0b0000</binarynumber>.</content>
</listitem></list>
<note><para>This definition applies:</para><list type="unordered"><listitem><content>To an implementation that includes <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref> and is using a translation granule smaller than 64KB.</content></listitem><listitem><content>To any implementation that does not include <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"></xref>.</content></listitem></list></note><para>If any VTTBR_EL2[47:0] bit that is defined as <arm-defined-word>RES0</arm-defined-word> has the value 1 when a translation table walk is performed using VTTBR_EL2, then the translation table base address might be misaligned, with effects that are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, and must be one of the following:</para>
<list type="unordered">
<listitem><content>Bits[x-1:0] of the translation table base address are treated as if all the bits are zero. The value read back from the corresponding register bits is either the value written to the register or zero.</content>
</listitem><listitem><content>The result of the calculation of an address for a translation table walk using this register can be corrupted in those bits that are nonzero.</content>
</listitem></list>
<para>The AArch64 Virtual Memory System Architecture chapter describes how x is calculated based on the value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.T0SZ, the stage of translation, and the translation granule size.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="CnP_0_0_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>CnP</field_name>
          <field_msb>0</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Common not Private. This bit indicates whether each entry that is pointed to by VTTBR_EL2 is a member of a common set that can be used by every PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The translation table entries pointed to by VTTBR_EL2 are permitted to differ from the entries for VTTBR_EL2 for other PEs in the Inner Shareable domain. This is not affected by the value of the current VMID.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The translation table entries pointed to by VTTBR_EL2 are the same as the translation table entries for every other PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1 and the VMID is the same as the current VMID.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This field is permitted to be cached in a TLB.</para>
<note><para>If the value of VTTBR_EL2.CnP bit is 1 on multiple PEs in the same Inner Shareable domain and those VTTBR_EL2s do not point to the same translation table entries when using the current VMID then the results of translations using VTTBR_EL2 are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, see <xref browsertext="'CONSTRAINED UNPREDICTABLE behaviors due to caching of control or data values'" filename="appx_architectural_constraints_on_unpredictable__.fm" linkend="CEGHBJBH"></xref>.</para></note>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When FEAT_TTCNP is implemented</fields_condition>
      </field>
        <field
           id="0_0_0_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>0</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="VMID[15:8]_63_56_1" msb="63" lsb="56"/>
        <fieldat id="VMID[7:0]_55_48" msb="55" lsb="48"/>
        <fieldat id="BADDR_47_1" msb="47" lsb="1"/>
        <fieldat id="CnP_0_0_1" msb="0" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRS VTTBR_EL2">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, VTTBR_EL2</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b100"/>
            
            <enc n="CRn" v="0b0010"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="op2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        return NVMem[0x020];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    return VTTBR_EL2;
elsif PSTATE.EL == EL3 then
    return VTTBR_EL2;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MSRregister VTTBR_EL2">
        <encoding>
          
          <access_instruction>MSR VTTBR_EL2, &lt;Xt&gt;</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b100"/>
            
            <enc n="CRn" v="0b0010"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="op2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="MSRregister" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        NVMem[0x020] = X[t];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    VTTBR_EL2 = X[t];
elsif PSTATE.EL == EL3 then
    VTTBR_EL2 = X[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>