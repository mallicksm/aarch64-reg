<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>CCSIDR2_EL1</reg_short_name>
      <reg_long_name>Current Cache Size ID Register 2</reg_long_name>
      
        <reg_condition otherwise="UNDEFINED">when FEAT_CCIDX is implemented</reg_condition>
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch32-ccsidr2.xml">CCSIDR2</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>When <xref browsertext="FEAT_CCIDX" filename="A_armv8_architecture_extensions.fm" linkend="v8.3.CCIDX"/> is implemented, provides the information about the architecture of the currently selected cache from bits[63:32] of <register_link state="AArch64" id="AArch64-ccsidr_el1.xml">CCSIDR_EL1</register_link>.</para>

      </purpose_text>
      <purpose_text>
        <para>When <xref browsertext="FEAT_CCIDX" filename="A_armv8_architecture_extensions.fm" linkend="v8.3.CCIDX"/> is not implemented, this register is not implemented.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>In an AArch64 only implementation, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether reading this register gives an <arm-defined-word>UNKNOWN</arm-defined-word> value or is <arm-defined-word>UNDEFINED</arm-defined-word>.</para>

      </configuration_text>
      <configuration_text>
        <para>The implementation includes one CCSIDR2_EL1 for each cache that it can access. <register_link state="AArch64" id="AArch64-csselr_el1.xml">CSSELR_EL1</register_link> selects which Cache Size ID Register is accessible.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>CCSIDR2_EL1 is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="NumSets_23_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>NumSets</field_name>
          <field_msb>23</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>(Number of sets in cache) - 1, therefore a value of 0 indicates 1 set in the cache. The number of sets does not have to be a power of 2.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="0_63_24" msb="63" lsb="24"/>
        <fieldat id="NumSets_23_0" msb="23" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>If <register_link state="AArch64" id="AArch64-csselr_el1.xml">CSSELR_EL1</register_link>.Level is programmed to a cache level that is not implemented, then on a read of the CCSIDR2_EL1 the behavior is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, and can be one of the following:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>The CCSIDR2_EL1 read is treated as NOP.</content>
</listitem><listitem><content>The CCSIDR2_EL1 read is <arm-defined-word>UNDEFINED</arm-defined-word>.</content>
</listitem><listitem><content>The CCSIDR2_EL1 read returns an <arm-defined-word>UNKNOWN</arm-defined-word> value.</content>
</listitem></list>
      </access_permission_text>


      <access_mechanism accessor="MRS CCSIDR2_EL1">
        <encoding>
          
          <access_instruction>MRS &lt;Xt&gt;, CCSIDR2_EL1</access_instruction>
            
            <enc n="op0" v="0b11"/>
            
            <enc n="op1" v="0b001"/>
            
            <enc n="CRn" v="0b0000"/>
            
            <enc n="CRm" v="0b0000"/>
            
            <enc n="op2" v="0b010"/>
        </encoding>
          <access_permission>
            <ps name="MRS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    if IsFeatureImplemented("FEAT_IDST") then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.TID2 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; HCR_EL2.TID4 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        return CCSIDR2_EL1;
elsif PSTATE.EL == EL2 then
    return CCSIDR2_EL1;
elsif PSTATE.EL == EL3 then
    return CCSIDR2_EL1;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>