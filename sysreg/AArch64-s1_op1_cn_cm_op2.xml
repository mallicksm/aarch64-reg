<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch64" is_register="False" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>S1_&lt;op1&gt;_&lt;Cn&gt;_&lt;Cm&gt;_&lt;op2&gt;</reg_short_name>
      <reg_long_name>IMPLEMENTATION DEFINED maintenance instructions</reg_long_name>
      
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>This area of the System instruction encoding space is reserved for <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> System instructions.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>IMPLEMENTATION DEFINED</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>S1_&lt;op1&gt;_&lt;Cn&gt;_&lt;Cm&gt;_&lt;op2&gt; is a 64-bit System instruction.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="IMPLEMENTATION DEFINED_63_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>IMPLEMENTATION DEFINED</field_name>
          <field_msb>63</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>.</para>
          
  

          </field_description>
            <field_values>
               
                 <field_value_name>I</field_value_name>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="IMPLEMENTATION DEFINED_63_0" msb="63" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="SYS S1_&lt;op1&gt;_&lt;Cn&gt;_&lt;Cm&gt;_&lt;op2&gt;">
        <encoding>
          
          <access_instruction>SYS #&lt;op1&gt;, &lt;Cn&gt;, &lt;Cm&gt;, #&lt;op2&gt;{, &lt;Xt&gt;}</access_instruction>
            
            <enc n="op0" v="0b01"/>
            
            <enc n="op1" v="op1[2:0]"/>
            
            <enc n="CRn" v="0b1x11"/>
            
            <enc n="CRm" v="Cm[3:0]"/>
            
            <enc n="op2" v="op2[2:0]"/>
        </encoding>
          <access_permission>
            <ps name="SYS" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.TIDCP == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        IMPLEMENTATION_DEFINED "";
else
    IMPLEMENTATION_DEFINED "";
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="SYSL S1_&lt;op1&gt;_&lt;Cn&gt;_&lt;Cm&gt;_&lt;op2&gt;">
        <encoding>
          
          <access_instruction>SYSL &lt;Xt&gt;, #&lt;op1&gt;, &lt;Cn&gt;, &lt;Cm&gt;, #&lt;op2&gt;</access_instruction>
            
            <enc n="op0" v="0b01"/>
            
            <enc n="op1" v="op1[2:0]"/>
            
            <enc n="CRn" v="0b1x11"/>
            
            <enc n="CRm" v="Cm[3:0]"/>
            
            <enc n="op2" v="op2[2:0]"/>
        </encoding>
          <access_permission>
            <ps name="SYSL" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.TIDCP == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        IMPLEMENTATION_DEFINED "";
else
    IMPLEMENTATION_DEFINED "";
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>01/07/2020 15:57; 80324f0b9997bede489cc15ad1565345720bcd2a</timestamp>
</register_page>